from math import log2, ceil

t = int(input())
for i in range(t):
  
  if i!=0:
    input()
  
  n, m = map(int, input().split())

  # -1 to indices

  roads = [{} for j in range(n)]

  bellman = []

  real = [-1]*n
  real[0] = 1
  least = 5

  for j in range(m):
    a, b, c = map(float, input().split())
  
    a, b = map(int, (a, b))
    
    a-=1
    b-=1

    roads[a][b] = c
    bellman.append(((a, b), log2(c)))

    if least > log2(c):
      least = log2(c)

  suppl = 5

  if least < 0:
    suppl = ceil(-least)

  #less than 5 so 5*n
  costs = [5*n+5*n + suppl*n]*n
  costs[0] = 0

  for j in range(n-1):
    for (start, to), cost in bellman:
      if costs[to] > costs[start] + cost:
        costs[to] = costs[start] + cost
        
        # if costs[to] < 5*n:
        real[to] = real[start] * roads[start][to]

  jackpot = False

  for j in range(1):
    for (start, to), cost in bellman:
      if costs[to] > costs[start] + cost:
        if costs[to] < 5*n:
          jackpot = True


  if jackpot:
    print("Case #"+str(i+1)+":", "Jackpot")
    continue

  #impossible
  if costs[n-1] > 5*n:
    print("Case #"+str(i+1)+":", "impossible")
    continue

  print("Case #"+str(i+1)+":", real[n-1])