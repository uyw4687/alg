import sys
from heapq import heappop,heappush
from collections import deque
input=sys.stdin.readline

t=int(input())
for i in range(t):
  if i!=0:
    input()
  n,m,g=map(int,input().split())
  os=list(map(int,input().split()))
  rs=[[]for j in range(n+1)]
  for j in range(m):
    x,y,l=map(int,input().split())
    if x==y:
      continue
    rs[x].append((y,l))
    rs[y].append((x,l))
  csg=[100000]*(n+1)
  vtd=[False]*(n+1)
  csg[g]=0
  hd=[(0,g)]
  #O(10000)
  while len(hd)!=0:
    cc,cg=heappop(hd)
    if vtd[cg]:
      continue
    vtd[cg]=True
    for to,c in rs[cg]:
      if not vtd[to]:
        if c+cc<csg[to]:
          csg[to]=c+cc
          heappush(hd,(csg[to],to))
  css=[100000]*(n+1)
  vtd=[False]*(n+1)
  css[0]=0
  hd=[(0,0)]
  #O(10000)
  while len(hd)!=0:
    cc,cg=heappop(hd)
    if vtd[cg]:
      continue
    vtd[cg]=True
    for to,c in rs[cg]:
      if not vtd[to]:
        if c+cc<css[to]:
          css[to]=c+cc
          heappush(hd,(css[to],to))
  vtd=None
  vld=[True]*(n+1)
  tts=csg[0]
  for j in range(n+1):
    if css[j]>=tts:
      vld[j]=False
  if not vld[0] or not vld[n]:
    print("Case #"+str(i+1)+":","impossible")
    continue
  opg=[set()for j in range(n+1)]
  #O(toomuch)
  bq=deque([[n,os[n-1],0]])
  done=[set()for j in range(n+1)]
  done[n].add((0,0))
  maxobj=-1
  while bq:
    cg,co,cc=bq.popleft()
    for to,c in rs[cg]:
      if to>=cg or not vld[to]:
        continue
      nc=cc+c
      if nc>=csg[to]:
        continue
      if to==0:
        maxobj=co if co>maxobj else maxobj
        continue
      no=co+os[to-1]
      if (no,nc) in done[to]:
        continue
      done[to].add((no,nc))
      bq.append((to,no,nc))
  if maxobj==-1:
    print("Case #"+str(i+1)+":","impossible")
  else:
    print("Case #"+str(i+1)+":",maxobj)