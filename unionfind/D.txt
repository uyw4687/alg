import math

# import sys
# import io

# sys.stdin = io.StringIO("4\n3 5\n3 4\n3 4\n3 5\n2\n1\n3\n4\n2\n\n3 4\n4 5\n4 5\n4 5\n3\n1\n2\n3\n\n3 3\n3 5\n3 4\n3 5\n5\n5\n5\n\n3 5\n3 5\n4 5\n3 4\n2\n3\n1\n1\n4\n")
# sys.stdin = io.StringIO("2\n2 3\n7 10\n9 11\n2\n4\n5\n\n3 4\n6 10\n9 12\n4 8\n3\n7\n9\n1\n")

# print("START###################################################")

n = int(input())
for i in range(n):

  if i != 0:
    input()

  s, f = map(int, input().split())

  minRoomNum = 2**31
  maxRoomNum = 0

  ranges = []
  for j in range(s):
    u, v = map(int, input().split())
    if u < minRoomNum:
      minRoomNum = u
    if v > maxRoomNum:
      maxRoomNum = v
    ranges.append([u, v])

  # if it takes too long make a tree
  ranges = sorted(ranges)
  
  # print(ranges)

  rooms = {}

  print('Case #' + str(i+1) + ':')

  for j in range(f):
    row = int(input())
    minRoom = minRoomNum
    maxRoom = maxRoomNum
    curr = int((minRoom + maxRoom) / 2)
      
    # print('minRoom : ' + str(minRoom))
    # print('maxRoom : ' + str(maxRoom))
    # print('row : ' + str(row))
    # print()
    # print('curr : ' + str(curr))
    # print('hop : ' + str(hop))
    # print()

    if row in rooms:
      print(rooms[row])
      continue

    while minRoom != maxRoom:

      total = 0 # counts lower than
      for elem in ranges:
        if elem[0] > curr:
          break
        else:
          if elem[1] >= curr:
            total += curr-elem[0]+1
          else:
            total += elem[1]-elem[0]+1
      
      # print('row : ' + str(row))
      # print('curr : ' + str(curr))
      # print('minRoom : ' + str(minRoom))
      # print('maxRoom : ' + str(maxRoom))
      # print('total : ' + str(total))
      # print('rooms : ' + str(rooms))
      # print()

      if total == row:
        break

      # # last binary search  
      # elif hop == 0:
      #   if total < row:
      #     rooms[row] = curr+1
      #   else:
      #     rooms[row] = curr
      #   print(rooms[row])
      #   break

      # continue search
      elif total < row:
        minRoom = curr+1
      else:
        maxRoom = curr

      curr = int((minRoom + maxRoom) / 2)

    rooms[row] = curr
    print(curr)

      # print('total : ' + str(total))
      # print()
      # print('curr : ' + str(curr))
      # print('hop : ' + str(hop))
      # print('rooms : ' + str(rooms))
      # print()
      
